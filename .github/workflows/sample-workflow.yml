# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Sample application integration.

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read
  actions: read

env:
  MODULE_NAME: arc-java
  DOCKER_FILE_NAME: Dockerfile
  DOCKER_IMAGE_TAG_NAME: io.jjong.arc.sample

jobs:
  build:

    runs-on: sample-app-runner
#    container:
#      image: summerwind/actions-runner:ubuntu-20.04@sha256:7b5ec64f4e1e0a1a2bde71ee63da5b818529a667c4f6190324c8e70c4d4ef134
#      options: --user root

    steps:
    - uses: actions/checkout@v3
#    - name: Set up JDK 21
#      uses: actions/setup-java@v3
#      with:
#        java-version: '21'
#        distribution: 'temurin'

    - name: Check my source
      run: pwd && ls -al

#    - name: Gradle Caching
#      uses: actions/cache@v3
#      with:
#        path: |
#          ~/.gradle/caches
#          ~/.gradle/wrapper
#        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#        restore-keys: |
#          ${{ runner.os }}-gradle-
    - name: export java
      run: echo "$JAVA_HOME_21_X64" && export JAVA_HOME=$JAVA_HOME_21_X64 && echo "$JAVA_HOME"
    - name: Build with Gradle
      run: ./gradlew build

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./docker/${{ env.DOCKER_FILE_NAME }}
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_TAG_NAME }}:${{ github.run_number }}
